apply plugin: 'com.android.application'
apply plugin: 'android-apt'
//集成fir.im发布
//apply plugin:'im.fir.plugin.gradle'

//fir{
//    //必填 上传 fir.im apk 字段，否则无法上传 APP 到 fir.im
//    apiToken hasLocalProperty("FIR_TOKEN") ? getLocalProperty("FIR_TOKEN") : System.getenv("FIR_TOKEN")
//    //可选 上传fir.im 中显示的changelog
//    changeLog gitLogFirstCommit()//getLocalProperty("UPDATE_LOG")
//}

android {
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.blakequ.androidblemanager"
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode 2
        versionName "1.1"
        buildConfigField "String", "FIR_TOKEN", hasLocalProperty("FIR_TOKEN_STRING") ? getLocalProperty("FIR_TOKEN_STRING") : System.getenv("FIR_TOKEN")
        buildConfigField "String", "FIR_ID", hasLocalProperty("FIR_ID_STRING") ? getLocalProperty("FIR_ID_STRING") : System.getenv("FIR_ID")
        //设置输出app默认前缀名称
//        project.ext.set("archivesBaseName", "BleManager_v" + versionName + "_"+today);
    }

    //签名配置
    signingConfigs {
      def appStoreFile = System.getenv("STORE_SIGN_FILE")
      def appStorePassword = System.getenv("STORE_SIGN_PWD")
      def appKeyAlias = System.getenv("KEY_ALIAS")
      def appKeyPassword = System.getenv("KEY_PASSWORD")
      //当不能从环境变量里获取到签名信息的时候，就使用项目中带的debug签名
      if(!appStoreFile||!appStorePassword||!appKeyAlias||!appKeyPassword){
        appStoreFile = "debug.keystore"
        appStorePassword = "android"
        appKeyAlias = "androiddebugkey"
        appKeyPassword = "android"
      }
      release {
        storeFile file(appStoreFile)
        storePassword appStorePassword
        keyAlias appKeyAlias
        keyPassword appKeyPassword
      }
    }

    buildTypes {
        debug {
            //对齐优化设置为true，否则找不到该task (默认不写也是true)
            zipAlignEnabled true
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            //自定义apk安装包名
            applicationVariants.all { variant ->
                variant.mergedFlavor.versionCode = gitVersionCode()
                variant.mergedFlavor.versionName = gitVersionTag()
                variant.outputs.each { output ->
                    output.outputFile = new File(
                            output.outputFile.parent + "/${variant.buildType.name}",
                            "androidblemanager-${variant.buildType.name}-${variant.versionName}-${releaseTime()}.apk".toLowerCase())
                }
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.github.hotchemi:permissionsdispatcher:2.1.3'
    apt 'com.github.hotchemi:permissionsdispatcher-processor:2.1.3'

    compile project(':bluetooth-manager-lib')
//    compile 'com.blakequ.androidblemanager:bluetooth-manager-lib:latest.integration'
}
